<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN'
        'http://mybatis.org/dtd/mybatis-3-mapper.dtd'>


<mapper namespace='cat.xarxarepublicana.hashtagsxrep.infrastructure.repository.jdbc.mapper.UserMapper'>

    <resultMap id='UserResultMap' type="cat.xarxarepublicana.hashtagsxrep.domain.user.User">
        <constructor>
            <idArg column="id" javaType="string" />
            <arg column="nickname" javaType="string" />
            <arg column="name" javaType="string" />
            <arg column="token" javaType="string" />
            <arg column="secret" javaType="string" />
            <arg column="role" javaType="string" />
            <arg column="sign_in_date" javaType="java.time.LocalDateTime" />
            <arg column="system_creation_date" javaType="java.time.LocalDateTime" />
            <arg column="twitter_creation_date" javaType="java.time.LocalDateTime" />
            <arg column="followers" javaType="integer" />
            <arg column="following" javaType="integer" />
            <arg column="language" javaType="string" />
            <arg column="location" javaType="string" />
            <arg column="profile_image_url" javaType="string" />
            <arg column="verified" javaType="boolean" />
            <arg column="locked" javaType="boolean" />
            <arg column="inGroup" javaType="boolean" />
        </constructor>
    </resultMap>

    <sql id="selectUserData">
        select user.*, (case when membership.group_id is null then 0 else 1 end) as inGroup
        from USER user
        left join USER_MEMBERSHIP membership ON user.id = membership.user_id
    </sql>

    <select id='selectOneById' resultMap="UserResultMap">
        <include refid="selectUserData"/>
        where user.id = #{id}
    </select>

    <select id='selectOneByNickname' resultMap="UserResultMap">
        <include refid="selectUserData"/>
        where user.nickname = #{nickname}
    </select>

    <select id='selectByMembership' resultMap="UserResultMap">
        select user.*, 1 as inGroup
        from USER user
        join USER_MEMBERSHIP membership ON user.id = membership.user_id
        where membership.group_id = #{groupId}
    </select>

    <select id="exists" resultType="boolean">
        SELECT exists (
            SELECT 1 FROM USER WHERE id = #{id}
        )
    </select>

    <insert id='insert'>
        INSERT INTO USER (id, nickname, name, token, secret, role,
            sign_in_date, system_creation_date, twitter_creation_date,
            followers, following, language, location, profile_image_url,
            verified, locked)
        VALUES (#{user.id}, #{user.nickname}, #{user.name}, #{user.token}, #{user.secret}, #{user.role},
            #{user.signInDate}, #{user.systemCreationDate}, #{user.twitterCreationDate},
            #{user.followers}, #{user.following}, #{user.language}, #{user.location}, #{user.profileImageUrl},
            #{user.verified}, #{user.locked})
    </insert>

    <update id='updateCredentialsData'>
        UPDATE USER SET
            sign_in_date= #{user.signInDate},
            token = #{user.token},
            secret = #{user.secret},
            nickname = #{user.nickname},
            name = #{user.name},
            followers = #{user.followers},
            following = #{user.following},
            language = #{user.language},
            location = #{user.location},
            profile_image_url = #{user.profileImageUrl},
            verified = #{user.verified},
            locked = #{user.locked}
        WHERE id = #{user.id}
    </update>

    <update id='updateTwitterData'>
        UPDATE USER SET
            nickname = #{user.nickname},
            name = #{user.name},
            followers = #{user.followers},
            following = #{user.following},
            language = #{user.language},
            location = #{user.location},
            profile_image_url = #{user.profileImageUrl},
            verified = #{user.verified},
            locked = #{user.locked}
        WHERE id = #{user.id}
    </update>

</mapper>