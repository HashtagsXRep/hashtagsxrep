<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN'
        'http://mybatis.org/dtd/mybatis-3-mapper.dtd'>


<mapper namespace='cat.xarxarepublicana.hashtagsxrep.infrastructure.repository.jdbc.mapper.RankingMapper'>

    <resultMap id='ScoreMap' type="cat.xarxarepublicana.hashtagsxrep.domain.ranking.Score">
        <constructor>
            <idArg column="nickname" javaType="string" />
            <arg column="score" javaType="integer" />
        </constructor>
    </resultMap>

    <resultMap id='UserScoreMap' type="cat.xarxarepublicana.hashtagsxrep.domain.ranking.HashtagScore">
        <constructor>
            <idArg column="hashtag" javaType="string" />
            <idArg column="type" javaType="string" />
            <arg column="quantity" javaType="integer" />
            <arg column="score" javaType="integer" />
        </constructor>
    </resultMap>

    <select id="selectTaggersRanking" resultMap="ScoreMap"><![CDATA[
SELECT taggers_ranking.nickname, taggers_ranking.score FROM (
  SELECT
    ranking.nickname                                 AS nickname,
    sum(ranking.ht_score)                            AS score,
    group_concat(DISTINCT ranking.type SEPARATOR '') AS content
  FROM (
         SELECT
           q.nickname,
           q.twitter_query                      AS hashtag,
           q.type,
           q.quantity,
           q.rownum * q.quantity * q.multiplier AS ht_score
         FROM (
                SELECT
                  user.nickname,
                  monitor.rownum,
                  monitor.id,
                  monitor.twitter_query,
                  twitter.type,
                  CASE twitter.type
                  WHEN 'T'
                    THEN 15
                  WHEN 'Q'
                    THEN 12
                  WHEN 'C'
                    THEN 5
                  ELSE 1 END              AS multiplier,
                  count(twitter.tweet_id) AS quantity
                FROM (
                       SELECT
                         @r := @r - 1 AS rownum,
                         z.*
                       FROM (SELECT
                               m.id,
                               m.twitter_query
                             FROM MONITOR m
                             ORDER BY start_date DESC
                             LIMIT 4) z,
                         (SELECT @r := 5) y
                     ) monitor, TWITTER_EXTRACTION twitter, USER user
                WHERE monitor.id = twitter.monitor_id AND user.id = twitter.user_id
                GROUP BY user.nickname, monitor.rownum, monitor.id, monitor.twitter_query, twitter.type
              ) q
         GROUP BY q.nickname, q.twitter_query, q.type, q.quantity
       ) ranking
  GROUP BY ranking.nickname
) taggers_ranking
WHERE taggers_ranking.content <> 'R'
ORDER BY taggers_ranking.score DESC
]]></select>

    <select id="selectUserScoreDetail" resultMap="UserScoreMap"><![CDATA[
SELECT
    q.twitter_query                      AS hashtag,
    q.type,
    q.quantity,
    q.rownum * q.quantity * q.multiplier AS score
  FROM (
         SELECT
           monitor.rownum,
           monitor.id,
           monitor.twitter_query,
           twitter.type,
           CASE twitter.type
           WHEN 'T'
             THEN 15
           WHEN 'Q'
             THEN 12
           WHEN 'C'
             THEN 5
           ELSE 1 END              AS multiplier,
           count(twitter.tweet_id) AS quantity
         FROM (
                SELECT
                  @r := @r - 1 AS rownum,
                  z.*
                FROM (SELECT
                        m.id,
                        m.twitter_query
                      FROM MONITOR m
                      ORDER BY start_date DESC
                      LIMIT 4) z,
                  (SELECT @r := 5) y
              ) monitor, TWITTER_EXTRACTION twitter, USER user
         WHERE monitor.id = twitter.monitor_id AND user.id = twitter.user_id AND user.nickname = #{nickname}
         GROUP BY monitor.rownum, monitor.id, monitor.twitter_query, twitter.type
       ) q,
    (
      SELECT
        monitor.twitter_query,
        group_concat(DISTINCT twitter.type SEPARATOR '') AS content
      FROM (
             SELECT
               @r := @r - 1 AS rownum,
               z.*
             FROM (SELECT
                     m.id,
                     m.twitter_query
                   FROM MONITOR m
                   ORDER BY start_date DESC
                   LIMIT 4) z,
               (SELECT @r := 5) y
           ) monitor, TWITTER_EXTRACTION twitter, USER user
      WHERE monitor.id = twitter.monitor_id AND user.id = twitter.user_id AND user.nickname = #{nickname}
      GROUP BY monitor.twitter_query
    ) control
  WHERE q.twitter_query = control.twitter_query AND control.content <> 'R'
  GROUP BY q.twitter_query, q.type, q.quantity
  ORDER BY q.rownum DESC, q.multiplier DESC
]]></select>
</mapper>